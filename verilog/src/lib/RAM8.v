// RAMB8BWER
// 8-bit wide dual-port memory
// code from spartan6_hdl.pdf from xilinx

RAMB8BWER #(
.DATA_WIDTH_A(0), // 0, 1, 2, 4, 9, 18, or 36
.DATA_WIDTH_B(0), // 0, 1, 2, 4, 9, 18, or 36
.DOA_REG(0), // Optional output register on A port (0 or 1)
.DOB_REG(0), // Optional output register on B port (0 or 1)
.EN_RSTRAM_A("TRUE"), // Enable/disable A port RST
.EN_RSTRAM_B("TRUE"), // Enable/disable B port RST
// INITP_00 to INITP_03: Allows specification of the initial contents of the 1KB parity data memory array.
.INITP_00(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INITP_01(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INITP_02(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INITP_03(256’h0000000000000000000000000000000000000000000000000000000000000000),
// INIT_00 to INIT_1F: Allows specification of the initial contents of the 8KB data memory array.
.INIT_00(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_01(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_02(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_03(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_04(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_05(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_06(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_07(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_08(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_09(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_0A(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_0B(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_0C(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_0D(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_0E(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_0F(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_10(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_11(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_12(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_13(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_14(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_15(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_16(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_17(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_18(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_19(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_1A(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_1B(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_1C(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_1D(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_1E(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_1F(256’h0000000000000000000000000000000000000000000000000000000000000000),
.INIT_A(18’h00000), // Initial values on A output port
.INIT_B(18’h00000), // Initial values on B output port
.INIT_FILE("NONE"), // File name of file used to specify initial RAM contents.
.RAM_MODE("TDP"), // SDP or TDP
.RSTTYPE("SYNC"), // SYNC or ASYNC
.RST_PRIORITY_A("CE"), // CE or SR
.RST_PRIORITY_B("CE"), // CE or SR
.SIM_COLLISION_CHECK("ALL"), // Collision check enable "ALL", "WARNING_ONLY", "GENERATE_X_ONLY" or "NONE"
.SRVAL_A(18’h00000), // Set/Reset value for A port output
.SRVAL_B(18’h00000), // Set/Reset value for B port output
.WRITE_MODE_A("WRITE_FIRST"), // "WRITE_FIRST", "READ_FIRST", or "NO_CHANGE"
.WRITE_MODE_B("WRITE_FIRST") // "WRITE_FIRST", "READ_FIRST", or "NO_CHANGE"
) RAMB8BWER_inst (
.DOADO(DOADO), // 16-bit A port data/LSB data output
.DOBDO(DOBDO), // 16-bit B port data/MSB data output
.DOPADOP(DOPADOP), // 2-bit A port parity/LSB parity output
.DOPBDOP(DOPBDOP), // 2-bit B port parity/MSB parity output
.ADDRAWRADDR(ADDRAWRADDR), // 13-bit A port address/Write address input
.ADDRBRDADDR(ADDRBRDADDR), // 13-bit B port address/Read address input
.CLKAWRCLK(CLKAWRCLK), // 1-bit A port clock/Write clock input
.CLKBRDCLK(CLKBRDCLK), // 1-bit B port clock/Read clock input
.DIADI(DIADI), // 16-bit A port data/LSB data input
.DIBDI(DIBDI), // 16-bit B port data/MSB data input
.DIPADIP(DIPADIP), // 2-bit A port parity/LSB parity input
.DIPBDIP(DIPBDIP), // 2-bit B port parity/MSB parity input
.ENAWREN(ENAWREN), // 1-bit A port enable/Write enable input
.ENBRDEN(ENBRDEN), // 1-bit B port enable/Read enable input
.REGCEA(REGCEA), // 1-bit A port register enable input
.REGCEBREGCE(REGCEBREGCE), // 1-bit B port register enable/Register enable input
.RSTA(RSTA), // 1-bit A port set/reset input
.RSTBRST(RSTBRST), // 1-bit B port set/reset input
.WEAWEL(WEAWEL), // 2-bit A port write enable input
.WEBWEU(WEBWEU) // 2-bit B port write enable input
);

